version: "2.1"

services:
  main:
    build:
      context: .
      dockerfile: ./build/main.Dockerfile
    ports:
      - "5458:5458"
    environment:
      POSTGRES_CONN: ${POSTGRES_CONN}
      JWT_SECRET: ${JWT_SECRET}
      REDIS_ADDR: ${REDIS_ADDR}
      MAIN_LOG_FILE: ${MAIN_LOG_FILE}
      USER_IMAGE_BASE_PATH: ${USER_IMAGE_BASE_PATH}
      RESTAURANT_IMAGE_BASE_PATH: ${RESTAURANT_IMAGE_BASE_PATH}
    volumes:
      -./images_restaurant:${USER_RESTAURANT_BASE_PATH}
      -./images_user:${USER_USER_BASE_PATH}
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - adminadmin-network

  postgres:
    env_file:
      - .env
    container_name: postgres
    image: postgres:15.0
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    networks:
      - adminadmin-network
    volumes:
      - ./build/sql/create_tables.sql:/docker-entrypoint-initdb.d/initdb.sql

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - adminadmin-network
    volumes:
      - redis-data:/data

volumes:
  redis-data:
  adminadmin-db-data:

networks:
  adminadmin-network:
    driver: bridge
